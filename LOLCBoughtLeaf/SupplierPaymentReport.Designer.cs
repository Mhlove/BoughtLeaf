//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace OLAXBoughtLeaf {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SupplierPaymentReport")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SupplierPaymentReport : global::System.Data.DataSet {
        
        private SupplierPaymentToBankDataTable tableSupplierPaymentToBank;
        
        private GetSupplierPaymentForPaySlipGeneralDataTable tableGetSupplierPaymentForPaySlipGeneral;
        
        private GetSupplierPaymentForPaySlipGreenLeafDataTable tableGetSupplierPaymentForPaySlipGreenLeaf;
        
        private GetSupplierPaymentForPaySlipThisMonthIssuesDataTable tableGetSupplierPaymentForPaySlipThisMonthIssues;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SupplierPaymentReport() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SupplierPaymentReport(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SupplierPaymentToBank"] != null)) {
                    base.Tables.Add(new SupplierPaymentToBankDataTable(ds.Tables["SupplierPaymentToBank"]));
                }
                if ((ds.Tables["GetSupplierPaymentForPaySlipGeneral"] != null)) {
                    base.Tables.Add(new GetSupplierPaymentForPaySlipGeneralDataTable(ds.Tables["GetSupplierPaymentForPaySlipGeneral"]));
                }
                if ((ds.Tables["GetSupplierPaymentForPaySlipGreenLeaf"] != null)) {
                    base.Tables.Add(new GetSupplierPaymentForPaySlipGreenLeafDataTable(ds.Tables["GetSupplierPaymentForPaySlipGreenLeaf"]));
                }
                if ((ds.Tables["GetSupplierPaymentForPaySlipThisMonthIssues"] != null)) {
                    base.Tables.Add(new GetSupplierPaymentForPaySlipThisMonthIssuesDataTable(ds.Tables["GetSupplierPaymentForPaySlipThisMonthIssues"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SupplierPaymentToBankDataTable SupplierPaymentToBank {
            get {
                return this.tableSupplierPaymentToBank;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetSupplierPaymentForPaySlipGeneralDataTable GetSupplierPaymentForPaySlipGeneral {
            get {
                return this.tableGetSupplierPaymentForPaySlipGeneral;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetSupplierPaymentForPaySlipGreenLeafDataTable GetSupplierPaymentForPaySlipGreenLeaf {
            get {
                return this.tableGetSupplierPaymentForPaySlipGreenLeaf;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetSupplierPaymentForPaySlipThisMonthIssuesDataTable GetSupplierPaymentForPaySlipThisMonthIssues {
            get {
                return this.tableGetSupplierPaymentForPaySlipThisMonthIssues;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SupplierPaymentReport cln = ((SupplierPaymentReport)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SupplierPaymentToBank"] != null)) {
                    base.Tables.Add(new SupplierPaymentToBankDataTable(ds.Tables["SupplierPaymentToBank"]));
                }
                if ((ds.Tables["GetSupplierPaymentForPaySlipGeneral"] != null)) {
                    base.Tables.Add(new GetSupplierPaymentForPaySlipGeneralDataTable(ds.Tables["GetSupplierPaymentForPaySlipGeneral"]));
                }
                if ((ds.Tables["GetSupplierPaymentForPaySlipGreenLeaf"] != null)) {
                    base.Tables.Add(new GetSupplierPaymentForPaySlipGreenLeafDataTable(ds.Tables["GetSupplierPaymentForPaySlipGreenLeaf"]));
                }
                if ((ds.Tables["GetSupplierPaymentForPaySlipThisMonthIssues"] != null)) {
                    base.Tables.Add(new GetSupplierPaymentForPaySlipThisMonthIssuesDataTable(ds.Tables["GetSupplierPaymentForPaySlipThisMonthIssues"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSupplierPaymentToBank = ((SupplierPaymentToBankDataTable)(base.Tables["SupplierPaymentToBank"]));
            if ((initTable == true)) {
                if ((this.tableSupplierPaymentToBank != null)) {
                    this.tableSupplierPaymentToBank.InitVars();
                }
            }
            this.tableGetSupplierPaymentForPaySlipGeneral = ((GetSupplierPaymentForPaySlipGeneralDataTable)(base.Tables["GetSupplierPaymentForPaySlipGeneral"]));
            if ((initTable == true)) {
                if ((this.tableGetSupplierPaymentForPaySlipGeneral != null)) {
                    this.tableGetSupplierPaymentForPaySlipGeneral.InitVars();
                }
            }
            this.tableGetSupplierPaymentForPaySlipGreenLeaf = ((GetSupplierPaymentForPaySlipGreenLeafDataTable)(base.Tables["GetSupplierPaymentForPaySlipGreenLeaf"]));
            if ((initTable == true)) {
                if ((this.tableGetSupplierPaymentForPaySlipGreenLeaf != null)) {
                    this.tableGetSupplierPaymentForPaySlipGreenLeaf.InitVars();
                }
            }
            this.tableGetSupplierPaymentForPaySlipThisMonthIssues = ((GetSupplierPaymentForPaySlipThisMonthIssuesDataTable)(base.Tables["GetSupplierPaymentForPaySlipThisMonthIssues"]));
            if ((initTable == true)) {
                if ((this.tableGetSupplierPaymentForPaySlipThisMonthIssues != null)) {
                    this.tableGetSupplierPaymentForPaySlipThisMonthIssues.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SupplierPaymentReport";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SupplierPaymentReport.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSupplierPaymentToBank = new SupplierPaymentToBankDataTable();
            base.Tables.Add(this.tableSupplierPaymentToBank);
            this.tableGetSupplierPaymentForPaySlipGeneral = new GetSupplierPaymentForPaySlipGeneralDataTable();
            base.Tables.Add(this.tableGetSupplierPaymentForPaySlipGeneral);
            this.tableGetSupplierPaymentForPaySlipGreenLeaf = new GetSupplierPaymentForPaySlipGreenLeafDataTable();
            base.Tables.Add(this.tableGetSupplierPaymentForPaySlipGreenLeaf);
            this.tableGetSupplierPaymentForPaySlipThisMonthIssues = new GetSupplierPaymentForPaySlipThisMonthIssuesDataTable();
            base.Tables.Add(this.tableGetSupplierPaymentForPaySlipThisMonthIssues);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSupplierPaymentToBank() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetSupplierPaymentForPaySlipGeneral() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetSupplierPaymentForPaySlipGreenLeaf() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetSupplierPaymentForPaySlipThisMonthIssues() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SupplierPaymentReport ds = new SupplierPaymentReport();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SupplierPaymentToBankRowChangeEventHandler(object sender, SupplierPaymentToBankRowChangeEvent e);
        
        public delegate void GetSupplierPaymentForPaySlipGeneralRowChangeEventHandler(object sender, GetSupplierPaymentForPaySlipGeneralRowChangeEvent e);
        
        public delegate void GetSupplierPaymentForPaySlipGreenLeafRowChangeEventHandler(object sender, GetSupplierPaymentForPaySlipGreenLeafRowChangeEvent e);
        
        public delegate void GetSupplierPaymentForPaySlipThisMonthIssuesRowChangeEventHandler(object sender, GetSupplierPaymentForPaySlipThisMonthIssuesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SupplierPaymentToBankDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBankCode;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnBranchCode;
            
            private global::System.Data.DataColumn columnBranchName;
            
            private global::System.Data.DataColumn columnSupplierCode;
            
            private global::System.Data.DataColumn columnSupplierName;
            
            private global::System.Data.DataColumn columnAccountNo;
            
            private global::System.Data.DataColumn columnNetPay;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentToBankDataTable() {
                this.TableName = "SupplierPaymentToBank";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SupplierPaymentToBankDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SupplierPaymentToBankDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankCodeColumn {
                get {
                    return this.columnBankCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchCodeColumn {
                get {
                    return this.columnBranchCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchNameColumn {
                get {
                    return this.columnBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCodeColumn {
                get {
                    return this.columnSupplierCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierNameColumn {
                get {
                    return this.columnSupplierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountNoColumn {
                get {
                    return this.columnAccountNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetPayColumn {
                get {
                    return this.columnNetPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentToBankRow this[int index] {
                get {
                    return ((SupplierPaymentToBankRow)(this.Rows[index]));
                }
            }
            
            public event SupplierPaymentToBankRowChangeEventHandler SupplierPaymentToBankRowChanging;
            
            public event SupplierPaymentToBankRowChangeEventHandler SupplierPaymentToBankRowChanged;
            
            public event SupplierPaymentToBankRowChangeEventHandler SupplierPaymentToBankRowDeleting;
            
            public event SupplierPaymentToBankRowChangeEventHandler SupplierPaymentToBankRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSupplierPaymentToBankRow(SupplierPaymentToBankRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentToBankRow AddSupplierPaymentToBankRow(string BankCode, string BankName, string BranchCode, string BranchName, string SupplierCode, string SupplierName, string AccountNo, decimal NetPay) {
                SupplierPaymentToBankRow rowSupplierPaymentToBankRow = ((SupplierPaymentToBankRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BankCode,
                        BankName,
                        BranchCode,
                        BranchName,
                        SupplierCode,
                        SupplierName,
                        AccountNo,
                        NetPay};
                rowSupplierPaymentToBankRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSupplierPaymentToBankRow);
                return rowSupplierPaymentToBankRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SupplierPaymentToBankDataTable cln = ((SupplierPaymentToBankDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SupplierPaymentToBankDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBankCode = base.Columns["BankCode"];
                this.columnBankName = base.Columns["BankName"];
                this.columnBranchCode = base.Columns["BranchCode"];
                this.columnBranchName = base.Columns["BranchName"];
                this.columnSupplierCode = base.Columns["SupplierCode"];
                this.columnSupplierName = base.Columns["SupplierName"];
                this.columnAccountNo = base.Columns["AccountNo"];
                this.columnNetPay = base.Columns["NetPay"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBankCode = new global::System.Data.DataColumn("BankCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCode);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnBranchCode = new global::System.Data.DataColumn("BranchCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchCode);
                this.columnBranchName = new global::System.Data.DataColumn("BranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchName);
                this.columnSupplierCode = new global::System.Data.DataColumn("SupplierCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCode);
                this.columnSupplierName = new global::System.Data.DataColumn("SupplierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierName);
                this.columnAccountNo = new global::System.Data.DataColumn("AccountNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountNo);
                this.columnNetPay = new global::System.Data.DataColumn("NetPay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetPay);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentToBankRow NewSupplierPaymentToBankRow() {
                return ((SupplierPaymentToBankRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SupplierPaymentToBankRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SupplierPaymentToBankRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SupplierPaymentToBankRowChanged != null)) {
                    this.SupplierPaymentToBankRowChanged(this, new SupplierPaymentToBankRowChangeEvent(((SupplierPaymentToBankRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SupplierPaymentToBankRowChanging != null)) {
                    this.SupplierPaymentToBankRowChanging(this, new SupplierPaymentToBankRowChangeEvent(((SupplierPaymentToBankRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SupplierPaymentToBankRowDeleted != null)) {
                    this.SupplierPaymentToBankRowDeleted(this, new SupplierPaymentToBankRowChangeEvent(((SupplierPaymentToBankRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SupplierPaymentToBankRowDeleting != null)) {
                    this.SupplierPaymentToBankRowDeleting(this, new SupplierPaymentToBankRowChangeEvent(((SupplierPaymentToBankRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSupplierPaymentToBankRow(SupplierPaymentToBankRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SupplierPaymentReport ds = new SupplierPaymentReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SupplierPaymentToBankDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetSupplierPaymentForPaySlipGeneralDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSupplierCode;
            
            private global::System.Data.DataColumn columnSupplierName;
            
            private global::System.Data.DataColumn columnRouteCode;
            
            private global::System.Data.DataColumn columnRouteName;
            
            private global::System.Data.DataColumn columnPayYear;
            
            private global::System.Data.DataColumn columnPayMonth;
            
            private global::System.Data.DataColumn columnTotalReceivedGreenLeaf;
            
            private global::System.Data.DataColumn columnTotalGoodGreenLeaf;
            
            private global::System.Data.DataColumn columnTotalNormalGreenLeaf;
            
            private global::System.Data.DataColumn columnGoodUnitPrice;
            
            private global::System.Data.DataColumn columnNormalUnitPrice;
            
            private global::System.Data.DataColumn columnBFBalanceAmount;
            
            private global::System.Data.DataColumn columnOtherAllowance;
            
            private global::System.Data.DataColumn columnTransportAllowance;
            
            private global::System.Data.DataColumn columnBFDebtsAmount;
            
            private global::System.Data.DataColumn columnOtherDeduction;
            
            private global::System.Data.DataColumn columnCashAdvance;
            
            private global::System.Data.DataColumn columnFertilizerChemical;
            
            private global::System.Data.DataColumn columnOtherDeduction02;
            
            private global::System.Data.DataColumn columnTeaDeduction;
            
            private global::System.Data.DataColumn columnLoanInstallmentInterest;
            
            private global::System.Data.DataColumn columnTransportDeduction;
            
            private global::System.Data.DataColumn columnStamp;
            
            private global::System.Data.DataColumn columnStationaryOther;
            
            private global::System.Data.DataColumn columnDeuFertilizerDebtAmout;
            
            private global::System.Data.DataColumn columnDeuLoanDebtAmout;
            
            private global::System.Data.DataColumn columnCFDebtAmount;
            
            private global::System.Data.DataColumn columnGoodLeafIncentive;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnBranchName;
            
            private global::System.Data.DataColumn columnAccountNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipGeneralDataTable() {
                this.TableName = "GetSupplierPaymentForPaySlipGeneral";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetSupplierPaymentForPaySlipGeneralDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetSupplierPaymentForPaySlipGeneralDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCodeColumn {
                get {
                    return this.columnSupplierCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierNameColumn {
                get {
                    return this.columnSupplierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RouteCodeColumn {
                get {
                    return this.columnRouteCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RouteNameColumn {
                get {
                    return this.columnRouteName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayYearColumn {
                get {
                    return this.columnPayYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayMonthColumn {
                get {
                    return this.columnPayMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalReceivedGreenLeafColumn {
                get {
                    return this.columnTotalReceivedGreenLeaf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalGoodGreenLeafColumn {
                get {
                    return this.columnTotalGoodGreenLeaf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalNormalGreenLeafColumn {
                get {
                    return this.columnTotalNormalGreenLeaf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodUnitPriceColumn {
                get {
                    return this.columnGoodUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NormalUnitPriceColumn {
                get {
                    return this.columnNormalUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BFBalanceAmountColumn {
                get {
                    return this.columnBFBalanceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherAllowanceColumn {
                get {
                    return this.columnOtherAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransportAllowanceColumn {
                get {
                    return this.columnTransportAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BFDebtsAmountColumn {
                get {
                    return this.columnBFDebtsAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherDeductionColumn {
                get {
                    return this.columnOtherDeduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashAdvanceColumn {
                get {
                    return this.columnCashAdvance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FertilizerChemicalColumn {
                get {
                    return this.columnFertilizerChemical;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherDeduction02Column {
                get {
                    return this.columnOtherDeduction02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeaDeductionColumn {
                get {
                    return this.columnTeaDeduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LoanInstallmentInterestColumn {
                get {
                    return this.columnLoanInstallmentInterest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransportDeductionColumn {
                get {
                    return this.columnTransportDeduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StampColumn {
                get {
                    return this.columnStamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StationaryOtherColumn {
                get {
                    return this.columnStationaryOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeuFertilizerDebtAmoutColumn {
                get {
                    return this.columnDeuFertilizerDebtAmout;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeuLoanDebtAmoutColumn {
                get {
                    return this.columnDeuLoanDebtAmout;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CFDebtAmountColumn {
                get {
                    return this.columnCFDebtAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodLeafIncentiveColumn {
                get {
                    return this.columnGoodLeafIncentive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchNameColumn {
                get {
                    return this.columnBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountNoColumn {
                get {
                    return this.columnAccountNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipGeneralRow this[int index] {
                get {
                    return ((GetSupplierPaymentForPaySlipGeneralRow)(this.Rows[index]));
                }
            }
            
            public event GetSupplierPaymentForPaySlipGeneralRowChangeEventHandler GetSupplierPaymentForPaySlipGeneralRowChanging;
            
            public event GetSupplierPaymentForPaySlipGeneralRowChangeEventHandler GetSupplierPaymentForPaySlipGeneralRowChanged;
            
            public event GetSupplierPaymentForPaySlipGeneralRowChangeEventHandler GetSupplierPaymentForPaySlipGeneralRowDeleting;
            
            public event GetSupplierPaymentForPaySlipGeneralRowChangeEventHandler GetSupplierPaymentForPaySlipGeneralRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetSupplierPaymentForPaySlipGeneralRow(GetSupplierPaymentForPaySlipGeneralRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipGeneralRow AddGetSupplierPaymentForPaySlipGeneralRow(
                        string SupplierCode, 
                        string SupplierName, 
                        string RouteCode, 
                        string RouteName, 
                        int PayYear, 
                        int PayMonth, 
                        decimal TotalReceivedGreenLeaf, 
                        decimal TotalGoodGreenLeaf, 
                        decimal TotalNormalGreenLeaf, 
                        decimal GoodUnitPrice, 
                        decimal NormalUnitPrice, 
                        decimal BFBalanceAmount, 
                        decimal OtherAllowance, 
                        decimal TransportAllowance, 
                        decimal BFDebtsAmount, 
                        decimal OtherDeduction, 
                        decimal CashAdvance, 
                        decimal FertilizerChemical, 
                        decimal OtherDeduction02, 
                        decimal TeaDeduction, 
                        decimal LoanInstallmentInterest, 
                        decimal TransportDeduction, 
                        decimal Stamp, 
                        decimal StationaryOther, 
                        decimal DeuFertilizerDebtAmout, 
                        decimal DeuLoanDebtAmout, 
                        decimal CFDebtAmount, 
                        decimal GoodLeafIncentive, 
                        string BankName, 
                        string BranchName, 
                        string AccountNo) {
                GetSupplierPaymentForPaySlipGeneralRow rowGetSupplierPaymentForPaySlipGeneralRow = ((GetSupplierPaymentForPaySlipGeneralRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SupplierCode,
                        SupplierName,
                        RouteCode,
                        RouteName,
                        PayYear,
                        PayMonth,
                        TotalReceivedGreenLeaf,
                        TotalGoodGreenLeaf,
                        TotalNormalGreenLeaf,
                        GoodUnitPrice,
                        NormalUnitPrice,
                        BFBalanceAmount,
                        OtherAllowance,
                        TransportAllowance,
                        BFDebtsAmount,
                        OtherDeduction,
                        CashAdvance,
                        FertilizerChemical,
                        OtherDeduction02,
                        TeaDeduction,
                        LoanInstallmentInterest,
                        TransportDeduction,
                        Stamp,
                        StationaryOther,
                        DeuFertilizerDebtAmout,
                        DeuLoanDebtAmout,
                        CFDebtAmount,
                        GoodLeafIncentive,
                        BankName,
                        BranchName,
                        AccountNo};
                rowGetSupplierPaymentForPaySlipGeneralRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetSupplierPaymentForPaySlipGeneralRow);
                return rowGetSupplierPaymentForPaySlipGeneralRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetSupplierPaymentForPaySlipGeneralDataTable cln = ((GetSupplierPaymentForPaySlipGeneralDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetSupplierPaymentForPaySlipGeneralDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSupplierCode = base.Columns["SupplierCode"];
                this.columnSupplierName = base.Columns["SupplierName"];
                this.columnRouteCode = base.Columns["RouteCode"];
                this.columnRouteName = base.Columns["RouteName"];
                this.columnPayYear = base.Columns["PayYear"];
                this.columnPayMonth = base.Columns["PayMonth"];
                this.columnTotalReceivedGreenLeaf = base.Columns["TotalReceivedGreenLeaf"];
                this.columnTotalGoodGreenLeaf = base.Columns["TotalGoodGreenLeaf"];
                this.columnTotalNormalGreenLeaf = base.Columns["TotalNormalGreenLeaf"];
                this.columnGoodUnitPrice = base.Columns["GoodUnitPrice"];
                this.columnNormalUnitPrice = base.Columns["NormalUnitPrice"];
                this.columnBFBalanceAmount = base.Columns["BFBalanceAmount"];
                this.columnOtherAllowance = base.Columns["OtherAllowance"];
                this.columnTransportAllowance = base.Columns["TransportAllowance"];
                this.columnBFDebtsAmount = base.Columns["BFDebtsAmount"];
                this.columnOtherDeduction = base.Columns["OtherDeduction"];
                this.columnCashAdvance = base.Columns["CashAdvance"];
                this.columnFertilizerChemical = base.Columns["FertilizerChemical"];
                this.columnOtherDeduction02 = base.Columns["OtherDeduction02"];
                this.columnTeaDeduction = base.Columns["TeaDeduction"];
                this.columnLoanInstallmentInterest = base.Columns["LoanInstallmentInterest"];
                this.columnTransportDeduction = base.Columns["TransportDeduction"];
                this.columnStamp = base.Columns["Stamp"];
                this.columnStationaryOther = base.Columns["StationaryOther"];
                this.columnDeuFertilizerDebtAmout = base.Columns["DeuFertilizerDebtAmout"];
                this.columnDeuLoanDebtAmout = base.Columns["DeuLoanDebtAmout"];
                this.columnCFDebtAmount = base.Columns["CFDebtAmount"];
                this.columnGoodLeafIncentive = base.Columns["GoodLeafIncentive"];
                this.columnBankName = base.Columns["BankName"];
                this.columnBranchName = base.Columns["BranchName"];
                this.columnAccountNo = base.Columns["AccountNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSupplierCode = new global::System.Data.DataColumn("SupplierCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCode);
                this.columnSupplierName = new global::System.Data.DataColumn("SupplierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierName);
                this.columnRouteCode = new global::System.Data.DataColumn("RouteCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRouteCode);
                this.columnRouteName = new global::System.Data.DataColumn("RouteName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRouteName);
                this.columnPayYear = new global::System.Data.DataColumn("PayYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayYear);
                this.columnPayMonth = new global::System.Data.DataColumn("PayMonth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayMonth);
                this.columnTotalReceivedGreenLeaf = new global::System.Data.DataColumn("TotalReceivedGreenLeaf", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalReceivedGreenLeaf);
                this.columnTotalGoodGreenLeaf = new global::System.Data.DataColumn("TotalGoodGreenLeaf", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalGoodGreenLeaf);
                this.columnTotalNormalGreenLeaf = new global::System.Data.DataColumn("TotalNormalGreenLeaf", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalNormalGreenLeaf);
                this.columnGoodUnitPrice = new global::System.Data.DataColumn("GoodUnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodUnitPrice);
                this.columnNormalUnitPrice = new global::System.Data.DataColumn("NormalUnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormalUnitPrice);
                this.columnBFBalanceAmount = new global::System.Data.DataColumn("BFBalanceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBFBalanceAmount);
                this.columnOtherAllowance = new global::System.Data.DataColumn("OtherAllowance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherAllowance);
                this.columnTransportAllowance = new global::System.Data.DataColumn("TransportAllowance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransportAllowance);
                this.columnBFDebtsAmount = new global::System.Data.DataColumn("BFDebtsAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBFDebtsAmount);
                this.columnOtherDeduction = new global::System.Data.DataColumn("OtherDeduction", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDeduction);
                this.columnCashAdvance = new global::System.Data.DataColumn("CashAdvance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashAdvance);
                this.columnFertilizerChemical = new global::System.Data.DataColumn("FertilizerChemical", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFertilizerChemical);
                this.columnOtherDeduction02 = new global::System.Data.DataColumn("OtherDeduction02", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDeduction02);
                this.columnTeaDeduction = new global::System.Data.DataColumn("TeaDeduction", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeaDeduction);
                this.columnLoanInstallmentInterest = new global::System.Data.DataColumn("LoanInstallmentInterest", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoanInstallmentInterest);
                this.columnTransportDeduction = new global::System.Data.DataColumn("TransportDeduction", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransportDeduction);
                this.columnStamp = new global::System.Data.DataColumn("Stamp", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStamp);
                this.columnStationaryOther = new global::System.Data.DataColumn("StationaryOther", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStationaryOther);
                this.columnDeuFertilizerDebtAmout = new global::System.Data.DataColumn("DeuFertilizerDebtAmout", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeuFertilizerDebtAmout);
                this.columnDeuLoanDebtAmout = new global::System.Data.DataColumn("DeuLoanDebtAmout", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeuLoanDebtAmout);
                this.columnCFDebtAmount = new global::System.Data.DataColumn("CFDebtAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCFDebtAmount);
                this.columnGoodLeafIncentive = new global::System.Data.DataColumn("GoodLeafIncentive", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodLeafIncentive);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnBranchName = new global::System.Data.DataColumn("BranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchName);
                this.columnAccountNo = new global::System.Data.DataColumn("AccountNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountNo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipGeneralRow NewGetSupplierPaymentForPaySlipGeneralRow() {
                return ((GetSupplierPaymentForPaySlipGeneralRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetSupplierPaymentForPaySlipGeneralRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetSupplierPaymentForPaySlipGeneralRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetSupplierPaymentForPaySlipGeneralRowChanged != null)) {
                    this.GetSupplierPaymentForPaySlipGeneralRowChanged(this, new GetSupplierPaymentForPaySlipGeneralRowChangeEvent(((GetSupplierPaymentForPaySlipGeneralRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetSupplierPaymentForPaySlipGeneralRowChanging != null)) {
                    this.GetSupplierPaymentForPaySlipGeneralRowChanging(this, new GetSupplierPaymentForPaySlipGeneralRowChangeEvent(((GetSupplierPaymentForPaySlipGeneralRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetSupplierPaymentForPaySlipGeneralRowDeleted != null)) {
                    this.GetSupplierPaymentForPaySlipGeneralRowDeleted(this, new GetSupplierPaymentForPaySlipGeneralRowChangeEvent(((GetSupplierPaymentForPaySlipGeneralRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetSupplierPaymentForPaySlipGeneralRowDeleting != null)) {
                    this.GetSupplierPaymentForPaySlipGeneralRowDeleting(this, new GetSupplierPaymentForPaySlipGeneralRowChangeEvent(((GetSupplierPaymentForPaySlipGeneralRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetSupplierPaymentForPaySlipGeneralRow(GetSupplierPaymentForPaySlipGeneralRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SupplierPaymentReport ds = new SupplierPaymentReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetSupplierPaymentForPaySlipGeneralDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetSupplierPaymentForPaySlipGreenLeafDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSupplierCode;
            
            private global::System.Data.DataColumn columnRouteCode;
            
            private global::System.Data.DataColumn columnDay01;
            
            private global::System.Data.DataColumn columnDay02;
            
            private global::System.Data.DataColumn columnDay03;
            
            private global::System.Data.DataColumn columnDay04;
            
            private global::System.Data.DataColumn columnDay05;
            
            private global::System.Data.DataColumn columnDay06;
            
            private global::System.Data.DataColumn columnDay07;
            
            private global::System.Data.DataColumn columnDay08;
            
            private global::System.Data.DataColumn columnDay09;
            
            private global::System.Data.DataColumn columnDay10;
            
            private global::System.Data.DataColumn columnDay11;
            
            private global::System.Data.DataColumn columnDay12;
            
            private global::System.Data.DataColumn columnDay13;
            
            private global::System.Data.DataColumn columnDay14;
            
            private global::System.Data.DataColumn columnDay15;
            
            private global::System.Data.DataColumn columnDay16;
            
            private global::System.Data.DataColumn columnDay17;
            
            private global::System.Data.DataColumn columnDay18;
            
            private global::System.Data.DataColumn columnDay19;
            
            private global::System.Data.DataColumn columnDay20;
            
            private global::System.Data.DataColumn columnDay21;
            
            private global::System.Data.DataColumn columnDay22;
            
            private global::System.Data.DataColumn columnDay23;
            
            private global::System.Data.DataColumn columnDay24;
            
            private global::System.Data.DataColumn columnDay25;
            
            private global::System.Data.DataColumn columnDay26;
            
            private global::System.Data.DataColumn columnDay27;
            
            private global::System.Data.DataColumn columnDay28;
            
            private global::System.Data.DataColumn columnDay29;
            
            private global::System.Data.DataColumn columnDay30;
            
            private global::System.Data.DataColumn columnDay31;
            
            private global::System.Data.DataColumn columnPayYear;
            
            private global::System.Data.DataColumn columnPayMonth;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipGreenLeafDataTable() {
                this.TableName = "GetSupplierPaymentForPaySlipGreenLeaf";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetSupplierPaymentForPaySlipGreenLeafDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetSupplierPaymentForPaySlipGreenLeafDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCodeColumn {
                get {
                    return this.columnSupplierCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RouteCodeColumn {
                get {
                    return this.columnRouteCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day01Column {
                get {
                    return this.columnDay01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day02Column {
                get {
                    return this.columnDay02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day03Column {
                get {
                    return this.columnDay03;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day04Column {
                get {
                    return this.columnDay04;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day05Column {
                get {
                    return this.columnDay05;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day06Column {
                get {
                    return this.columnDay06;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day07Column {
                get {
                    return this.columnDay07;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day08Column {
                get {
                    return this.columnDay08;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day09Column {
                get {
                    return this.columnDay09;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day10Column {
                get {
                    return this.columnDay10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day11Column {
                get {
                    return this.columnDay11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day12Column {
                get {
                    return this.columnDay12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day13Column {
                get {
                    return this.columnDay13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day14Column {
                get {
                    return this.columnDay14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day15Column {
                get {
                    return this.columnDay15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day16Column {
                get {
                    return this.columnDay16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day17Column {
                get {
                    return this.columnDay17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day18Column {
                get {
                    return this.columnDay18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day19Column {
                get {
                    return this.columnDay19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day20Column {
                get {
                    return this.columnDay20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day21Column {
                get {
                    return this.columnDay21;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day22Column {
                get {
                    return this.columnDay22;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day23Column {
                get {
                    return this.columnDay23;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day24Column {
                get {
                    return this.columnDay24;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day25Column {
                get {
                    return this.columnDay25;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day26Column {
                get {
                    return this.columnDay26;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day27Column {
                get {
                    return this.columnDay27;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day28Column {
                get {
                    return this.columnDay28;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day29Column {
                get {
                    return this.columnDay29;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day30Column {
                get {
                    return this.columnDay30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day31Column {
                get {
                    return this.columnDay31;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayYearColumn {
                get {
                    return this.columnPayYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayMonthColumn {
                get {
                    return this.columnPayMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipGreenLeafRow this[int index] {
                get {
                    return ((GetSupplierPaymentForPaySlipGreenLeafRow)(this.Rows[index]));
                }
            }
            
            public event GetSupplierPaymentForPaySlipGreenLeafRowChangeEventHandler GetSupplierPaymentForPaySlipGreenLeafRowChanging;
            
            public event GetSupplierPaymentForPaySlipGreenLeafRowChangeEventHandler GetSupplierPaymentForPaySlipGreenLeafRowChanged;
            
            public event GetSupplierPaymentForPaySlipGreenLeafRowChangeEventHandler GetSupplierPaymentForPaySlipGreenLeafRowDeleting;
            
            public event GetSupplierPaymentForPaySlipGreenLeafRowChangeEventHandler GetSupplierPaymentForPaySlipGreenLeafRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetSupplierPaymentForPaySlipGreenLeafRow(GetSupplierPaymentForPaySlipGreenLeafRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipGreenLeafRow AddGetSupplierPaymentForPaySlipGreenLeafRow(
                        string SupplierCode, 
                        string RouteCode, 
                        decimal Day01, 
                        decimal Day02, 
                        decimal Day03, 
                        decimal Day04, 
                        decimal Day05, 
                        decimal Day06, 
                        decimal Day07, 
                        decimal Day08, 
                        decimal Day09, 
                        decimal Day10, 
                        decimal Day11, 
                        decimal Day12, 
                        decimal Day13, 
                        decimal Day14, 
                        decimal Day15, 
                        decimal Day16, 
                        decimal Day17, 
                        decimal Day18, 
                        decimal Day19, 
                        decimal Day20, 
                        decimal Day21, 
                        decimal Day22, 
                        decimal Day23, 
                        decimal Day24, 
                        decimal Day25, 
                        decimal Day26, 
                        decimal Day27, 
                        decimal Day28, 
                        decimal Day29, 
                        decimal Day30, 
                        decimal Day31, 
                        int PayYear, 
                        int PayMonth) {
                GetSupplierPaymentForPaySlipGreenLeafRow rowGetSupplierPaymentForPaySlipGreenLeafRow = ((GetSupplierPaymentForPaySlipGreenLeafRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SupplierCode,
                        RouteCode,
                        Day01,
                        Day02,
                        Day03,
                        Day04,
                        Day05,
                        Day06,
                        Day07,
                        Day08,
                        Day09,
                        Day10,
                        Day11,
                        Day12,
                        Day13,
                        Day14,
                        Day15,
                        Day16,
                        Day17,
                        Day18,
                        Day19,
                        Day20,
                        Day21,
                        Day22,
                        Day23,
                        Day24,
                        Day25,
                        Day26,
                        Day27,
                        Day28,
                        Day29,
                        Day30,
                        Day31,
                        PayYear,
                        PayMonth};
                rowGetSupplierPaymentForPaySlipGreenLeafRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetSupplierPaymentForPaySlipGreenLeafRow);
                return rowGetSupplierPaymentForPaySlipGreenLeafRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetSupplierPaymentForPaySlipGreenLeafDataTable cln = ((GetSupplierPaymentForPaySlipGreenLeafDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetSupplierPaymentForPaySlipGreenLeafDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSupplierCode = base.Columns["SupplierCode"];
                this.columnRouteCode = base.Columns["RouteCode"];
                this.columnDay01 = base.Columns["Day01"];
                this.columnDay02 = base.Columns["Day02"];
                this.columnDay03 = base.Columns["Day03"];
                this.columnDay04 = base.Columns["Day04"];
                this.columnDay05 = base.Columns["Day05"];
                this.columnDay06 = base.Columns["Day06"];
                this.columnDay07 = base.Columns["Day07"];
                this.columnDay08 = base.Columns["Day08"];
                this.columnDay09 = base.Columns["Day09"];
                this.columnDay10 = base.Columns["Day10"];
                this.columnDay11 = base.Columns["Day11"];
                this.columnDay12 = base.Columns["Day12"];
                this.columnDay13 = base.Columns["Day13"];
                this.columnDay14 = base.Columns["Day14"];
                this.columnDay15 = base.Columns["Day15"];
                this.columnDay16 = base.Columns["Day16"];
                this.columnDay17 = base.Columns["Day17"];
                this.columnDay18 = base.Columns["Day18"];
                this.columnDay19 = base.Columns["Day19"];
                this.columnDay20 = base.Columns["Day20"];
                this.columnDay21 = base.Columns["Day21"];
                this.columnDay22 = base.Columns["Day22"];
                this.columnDay23 = base.Columns["Day23"];
                this.columnDay24 = base.Columns["Day24"];
                this.columnDay25 = base.Columns["Day25"];
                this.columnDay26 = base.Columns["Day26"];
                this.columnDay27 = base.Columns["Day27"];
                this.columnDay28 = base.Columns["Day28"];
                this.columnDay29 = base.Columns["Day29"];
                this.columnDay30 = base.Columns["Day30"];
                this.columnDay31 = base.Columns["Day31"];
                this.columnPayYear = base.Columns["PayYear"];
                this.columnPayMonth = base.Columns["PayMonth"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSupplierCode = new global::System.Data.DataColumn("SupplierCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCode);
                this.columnRouteCode = new global::System.Data.DataColumn("RouteCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRouteCode);
                this.columnDay01 = new global::System.Data.DataColumn("Day01", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay01);
                this.columnDay02 = new global::System.Data.DataColumn("Day02", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay02);
                this.columnDay03 = new global::System.Data.DataColumn("Day03", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay03);
                this.columnDay04 = new global::System.Data.DataColumn("Day04", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay04);
                this.columnDay05 = new global::System.Data.DataColumn("Day05", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay05);
                this.columnDay06 = new global::System.Data.DataColumn("Day06", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay06);
                this.columnDay07 = new global::System.Data.DataColumn("Day07", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay07);
                this.columnDay08 = new global::System.Data.DataColumn("Day08", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay08);
                this.columnDay09 = new global::System.Data.DataColumn("Day09", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay09);
                this.columnDay10 = new global::System.Data.DataColumn("Day10", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay10);
                this.columnDay11 = new global::System.Data.DataColumn("Day11", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay11);
                this.columnDay12 = new global::System.Data.DataColumn("Day12", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay12);
                this.columnDay13 = new global::System.Data.DataColumn("Day13", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay13);
                this.columnDay14 = new global::System.Data.DataColumn("Day14", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay14);
                this.columnDay15 = new global::System.Data.DataColumn("Day15", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay15);
                this.columnDay16 = new global::System.Data.DataColumn("Day16", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay16);
                this.columnDay17 = new global::System.Data.DataColumn("Day17", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay17);
                this.columnDay18 = new global::System.Data.DataColumn("Day18", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay18);
                this.columnDay19 = new global::System.Data.DataColumn("Day19", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay19);
                this.columnDay20 = new global::System.Data.DataColumn("Day20", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay20);
                this.columnDay21 = new global::System.Data.DataColumn("Day21", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay21);
                this.columnDay22 = new global::System.Data.DataColumn("Day22", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay22);
                this.columnDay23 = new global::System.Data.DataColumn("Day23", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay23);
                this.columnDay24 = new global::System.Data.DataColumn("Day24", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay24);
                this.columnDay25 = new global::System.Data.DataColumn("Day25", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay25);
                this.columnDay26 = new global::System.Data.DataColumn("Day26", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay26);
                this.columnDay27 = new global::System.Data.DataColumn("Day27", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay27);
                this.columnDay28 = new global::System.Data.DataColumn("Day28", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay28);
                this.columnDay29 = new global::System.Data.DataColumn("Day29", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay29);
                this.columnDay30 = new global::System.Data.DataColumn("Day30", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay30);
                this.columnDay31 = new global::System.Data.DataColumn("Day31", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay31);
                this.columnPayYear = new global::System.Data.DataColumn("PayYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayYear);
                this.columnPayMonth = new global::System.Data.DataColumn("PayMonth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayMonth);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipGreenLeafRow NewGetSupplierPaymentForPaySlipGreenLeafRow() {
                return ((GetSupplierPaymentForPaySlipGreenLeafRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetSupplierPaymentForPaySlipGreenLeafRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetSupplierPaymentForPaySlipGreenLeafRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetSupplierPaymentForPaySlipGreenLeafRowChanged != null)) {
                    this.GetSupplierPaymentForPaySlipGreenLeafRowChanged(this, new GetSupplierPaymentForPaySlipGreenLeafRowChangeEvent(((GetSupplierPaymentForPaySlipGreenLeafRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetSupplierPaymentForPaySlipGreenLeafRowChanging != null)) {
                    this.GetSupplierPaymentForPaySlipGreenLeafRowChanging(this, new GetSupplierPaymentForPaySlipGreenLeafRowChangeEvent(((GetSupplierPaymentForPaySlipGreenLeafRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetSupplierPaymentForPaySlipGreenLeafRowDeleted != null)) {
                    this.GetSupplierPaymentForPaySlipGreenLeafRowDeleted(this, new GetSupplierPaymentForPaySlipGreenLeafRowChangeEvent(((GetSupplierPaymentForPaySlipGreenLeafRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetSupplierPaymentForPaySlipGreenLeafRowDeleting != null)) {
                    this.GetSupplierPaymentForPaySlipGreenLeafRowDeleting(this, new GetSupplierPaymentForPaySlipGreenLeafRowChangeEvent(((GetSupplierPaymentForPaySlipGreenLeafRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetSupplierPaymentForPaySlipGreenLeafRow(GetSupplierPaymentForPaySlipGreenLeafRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SupplierPaymentReport ds = new SupplierPaymentReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetSupplierPaymentForPaySlipGreenLeafDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetSupplierPaymentForPaySlipThisMonthIssuesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSupplierCode;
            
            private global::System.Data.DataColumn columnRouteCode;
            
            private global::System.Data.DataColumn columnPayYear;
            
            private global::System.Data.DataColumn columnPayMonth;
            
            private global::System.Data.DataColumn columnIssueDate;
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnLineItemTotalAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipThisMonthIssuesDataTable() {
                this.TableName = "GetSupplierPaymentForPaySlipThisMonthIssues";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetSupplierPaymentForPaySlipThisMonthIssuesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetSupplierPaymentForPaySlipThisMonthIssuesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCodeColumn {
                get {
                    return this.columnSupplierCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RouteCodeColumn {
                get {
                    return this.columnRouteCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayYearColumn {
                get {
                    return this.columnPayYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayMonthColumn {
                get {
                    return this.columnPayMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueDateColumn {
                get {
                    return this.columnIssueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineItemTotalAmountColumn {
                get {
                    return this.columnLineItemTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipThisMonthIssuesRow this[int index] {
                get {
                    return ((GetSupplierPaymentForPaySlipThisMonthIssuesRow)(this.Rows[index]));
                }
            }
            
            public event GetSupplierPaymentForPaySlipThisMonthIssuesRowChangeEventHandler GetSupplierPaymentForPaySlipThisMonthIssuesRowChanging;
            
            public event GetSupplierPaymentForPaySlipThisMonthIssuesRowChangeEventHandler GetSupplierPaymentForPaySlipThisMonthIssuesRowChanged;
            
            public event GetSupplierPaymentForPaySlipThisMonthIssuesRowChangeEventHandler GetSupplierPaymentForPaySlipThisMonthIssuesRowDeleting;
            
            public event GetSupplierPaymentForPaySlipThisMonthIssuesRowChangeEventHandler GetSupplierPaymentForPaySlipThisMonthIssuesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetSupplierPaymentForPaySlipThisMonthIssuesRow(GetSupplierPaymentForPaySlipThisMonthIssuesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipThisMonthIssuesRow AddGetSupplierPaymentForPaySlipThisMonthIssuesRow(string SupplierCode, string RouteCode, int PayYear, int PayMonth, System.DateTime IssueDate, string ItemCode, string ItemName, decimal LineItemTotalAmount) {
                GetSupplierPaymentForPaySlipThisMonthIssuesRow rowGetSupplierPaymentForPaySlipThisMonthIssuesRow = ((GetSupplierPaymentForPaySlipThisMonthIssuesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SupplierCode,
                        RouteCode,
                        PayYear,
                        PayMonth,
                        IssueDate,
                        ItemCode,
                        ItemName,
                        LineItemTotalAmount};
                rowGetSupplierPaymentForPaySlipThisMonthIssuesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetSupplierPaymentForPaySlipThisMonthIssuesRow);
                return rowGetSupplierPaymentForPaySlipThisMonthIssuesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetSupplierPaymentForPaySlipThisMonthIssuesDataTable cln = ((GetSupplierPaymentForPaySlipThisMonthIssuesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetSupplierPaymentForPaySlipThisMonthIssuesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSupplierCode = base.Columns["SupplierCode"];
                this.columnRouteCode = base.Columns["RouteCode"];
                this.columnPayYear = base.Columns["PayYear"];
                this.columnPayMonth = base.Columns["PayMonth"];
                this.columnIssueDate = base.Columns["IssueDate"];
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnLineItemTotalAmount = base.Columns["LineItemTotalAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSupplierCode = new global::System.Data.DataColumn("SupplierCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCode);
                this.columnRouteCode = new global::System.Data.DataColumn("RouteCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRouteCode);
                this.columnPayYear = new global::System.Data.DataColumn("PayYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayYear);
                this.columnPayMonth = new global::System.Data.DataColumn("PayMonth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayMonth);
                this.columnIssueDate = new global::System.Data.DataColumn("IssueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueDate);
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnLineItemTotalAmount = new global::System.Data.DataColumn("LineItemTotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineItemTotalAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipThisMonthIssuesRow NewGetSupplierPaymentForPaySlipThisMonthIssuesRow() {
                return ((GetSupplierPaymentForPaySlipThisMonthIssuesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetSupplierPaymentForPaySlipThisMonthIssuesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetSupplierPaymentForPaySlipThisMonthIssuesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetSupplierPaymentForPaySlipThisMonthIssuesRowChanged != null)) {
                    this.GetSupplierPaymentForPaySlipThisMonthIssuesRowChanged(this, new GetSupplierPaymentForPaySlipThisMonthIssuesRowChangeEvent(((GetSupplierPaymentForPaySlipThisMonthIssuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetSupplierPaymentForPaySlipThisMonthIssuesRowChanging != null)) {
                    this.GetSupplierPaymentForPaySlipThisMonthIssuesRowChanging(this, new GetSupplierPaymentForPaySlipThisMonthIssuesRowChangeEvent(((GetSupplierPaymentForPaySlipThisMonthIssuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetSupplierPaymentForPaySlipThisMonthIssuesRowDeleted != null)) {
                    this.GetSupplierPaymentForPaySlipThisMonthIssuesRowDeleted(this, new GetSupplierPaymentForPaySlipThisMonthIssuesRowChangeEvent(((GetSupplierPaymentForPaySlipThisMonthIssuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetSupplierPaymentForPaySlipThisMonthIssuesRowDeleting != null)) {
                    this.GetSupplierPaymentForPaySlipThisMonthIssuesRowDeleting(this, new GetSupplierPaymentForPaySlipThisMonthIssuesRowChangeEvent(((GetSupplierPaymentForPaySlipThisMonthIssuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetSupplierPaymentForPaySlipThisMonthIssuesRow(GetSupplierPaymentForPaySlipThisMonthIssuesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SupplierPaymentReport ds = new SupplierPaymentReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetSupplierPaymentForPaySlipThisMonthIssuesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SupplierPaymentToBankRow : global::System.Data.DataRow {
            
            private SupplierPaymentToBankDataTable tableSupplierPaymentToBank;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SupplierPaymentToBankRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSupplierPaymentToBank = ((SupplierPaymentToBankDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankCode {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentToBank.BankCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankCode\' in table \'SupplierPaymentToBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentToBank.BankCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentToBank.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'SupplierPaymentToBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentToBank.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BranchCode {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentToBank.BranchCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchCode\' in table \'SupplierPaymentToBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentToBank.BranchCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BranchName {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentToBank.BranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchName\' in table \'SupplierPaymentToBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentToBank.BranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierCode {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentToBank.SupplierCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierCode\' in table \'SupplierPaymentToBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentToBank.SupplierCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierName {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentToBank.SupplierNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierName\' in table \'SupplierPaymentToBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentToBank.SupplierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountNo {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPaymentToBank.AccountNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountNo\' in table \'SupplierPaymentToBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentToBank.AccountNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetPay {
                get {
                    try {
                        return ((decimal)(this[this.tableSupplierPaymentToBank.NetPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetPay\' in table \'SupplierPaymentToBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPaymentToBank.NetPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankCodeNull() {
                return this.IsNull(this.tableSupplierPaymentToBank.BankCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankCodeNull() {
                this[this.tableSupplierPaymentToBank.BankCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankNameNull() {
                return this.IsNull(this.tableSupplierPaymentToBank.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankNameNull() {
                this[this.tableSupplierPaymentToBank.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchCodeNull() {
                return this.IsNull(this.tableSupplierPaymentToBank.BranchCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchCodeNull() {
                this[this.tableSupplierPaymentToBank.BranchCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNameNull() {
                return this.IsNull(this.tableSupplierPaymentToBank.BranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNameNull() {
                this[this.tableSupplierPaymentToBank.BranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierCodeNull() {
                return this.IsNull(this.tableSupplierPaymentToBank.SupplierCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierCodeNull() {
                this[this.tableSupplierPaymentToBank.SupplierCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierNameNull() {
                return this.IsNull(this.tableSupplierPaymentToBank.SupplierNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierNameNull() {
                this[this.tableSupplierPaymentToBank.SupplierNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNoNull() {
                return this.IsNull(this.tableSupplierPaymentToBank.AccountNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNoNull() {
                this[this.tableSupplierPaymentToBank.AccountNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetPayNull() {
                return this.IsNull(this.tableSupplierPaymentToBank.NetPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetPayNull() {
                this[this.tableSupplierPaymentToBank.NetPayColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetSupplierPaymentForPaySlipGeneralRow : global::System.Data.DataRow {
            
            private GetSupplierPaymentForPaySlipGeneralDataTable tableGetSupplierPaymentForPaySlipGeneral;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetSupplierPaymentForPaySlipGeneralRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetSupplierPaymentForPaySlipGeneral = ((GetSupplierPaymentForPaySlipGeneralDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierCode {
                get {
                    try {
                        return ((string)(this[this.tableGetSupplierPaymentForPaySlipGeneral.SupplierCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierCode\' in table \'GetSupplierPaymentForPaySlipGeneral" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.SupplierCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierName {
                get {
                    try {
                        return ((string)(this[this.tableGetSupplierPaymentForPaySlipGeneral.SupplierNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierName\' in table \'GetSupplierPaymentForPaySlipGeneral" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.SupplierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RouteCode {
                get {
                    try {
                        return ((string)(this[this.tableGetSupplierPaymentForPaySlipGeneral.RouteCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RouteCode\' in table \'GetSupplierPaymentForPaySlipGeneral\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.RouteCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RouteName {
                get {
                    try {
                        return ((string)(this[this.tableGetSupplierPaymentForPaySlipGeneral.RouteNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RouteName\' in table \'GetSupplierPaymentForPaySlipGeneral\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.RouteNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PayYear {
                get {
                    try {
                        return ((int)(this[this.tableGetSupplierPaymentForPaySlipGeneral.PayYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayYear\' in table \'GetSupplierPaymentForPaySlipGeneral\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.PayYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PayMonth {
                get {
                    try {
                        return ((int)(this[this.tableGetSupplierPaymentForPaySlipGeneral.PayMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayMonth\' in table \'GetSupplierPaymentForPaySlipGeneral\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.PayMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalReceivedGreenLeaf {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.TotalReceivedGreenLeafColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalReceivedGreenLeaf\' in table \'GetSupplierPaymentForPayS" +
                                "lipGeneral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.TotalReceivedGreenLeafColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalGoodGreenLeaf {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.TotalGoodGreenLeafColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalGoodGreenLeaf\' in table \'GetSupplierPaymentForPaySlipG" +
                                "eneral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.TotalGoodGreenLeafColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalNormalGreenLeaf {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.TotalNormalGreenLeafColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalNormalGreenLeaf\' in table \'GetSupplierPaymentForPaySli" +
                                "pGeneral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.TotalNormalGreenLeafColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GoodUnitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.GoodUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoodUnitPrice\' in table \'GetSupplierPaymentForPaySlipGenera" +
                                "l\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.GoodUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NormalUnitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.NormalUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NormalUnitPrice\' in table \'GetSupplierPaymentForPaySlipGene" +
                                "ral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.NormalUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BFBalanceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.BFBalanceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BFBalanceAmount\' in table \'GetSupplierPaymentForPaySlipGene" +
                                "ral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.BFBalanceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherAllowance {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.OtherAllowanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherAllowance\' in table \'GetSupplierPaymentForPaySlipGener" +
                                "al\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.OtherAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TransportAllowance {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.TransportAllowanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransportAllowance\' in table \'GetSupplierPaymentForPaySlipG" +
                                "eneral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.TransportAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BFDebtsAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.BFDebtsAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BFDebtsAmount\' in table \'GetSupplierPaymentForPaySlipGenera" +
                                "l\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.BFDebtsAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherDeduction {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.OtherDeductionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherDeduction\' in table \'GetSupplierPaymentForPaySlipGener" +
                                "al\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.OtherDeductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CashAdvance {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.CashAdvanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CashAdvance\' in table \'GetSupplierPaymentForPaySlipGeneral\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.CashAdvanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FertilizerChemical {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.FertilizerChemicalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FertilizerChemical\' in table \'GetSupplierPaymentForPaySlipG" +
                                "eneral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.FertilizerChemicalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherDeduction02 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.OtherDeduction02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherDeduction02\' in table \'GetSupplierPaymentForPaySlipGen" +
                                "eral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.OtherDeduction02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TeaDeduction {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.TeaDeductionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeaDeduction\' in table \'GetSupplierPaymentForPaySlipGeneral" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.TeaDeductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LoanInstallmentInterest {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.LoanInstallmentInterestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoanInstallmentInterest\' in table \'GetSupplierPaymentForPay" +
                                "SlipGeneral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.LoanInstallmentInterestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TransportDeduction {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.TransportDeductionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransportDeduction\' in table \'GetSupplierPaymentForPaySlipG" +
                                "eneral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.TransportDeductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Stamp {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.StampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stamp\' in table \'GetSupplierPaymentForPaySlipGeneral\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.StampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal StationaryOther {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.StationaryOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StationaryOther\' in table \'GetSupplierPaymentForPaySlipGene" +
                                "ral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.StationaryOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DeuFertilizerDebtAmout {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.DeuFertilizerDebtAmoutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeuFertilizerDebtAmout\' in table \'GetSupplierPaymentForPayS" +
                                "lipGeneral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.DeuFertilizerDebtAmoutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DeuLoanDebtAmout {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.DeuLoanDebtAmoutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeuLoanDebtAmout\' in table \'GetSupplierPaymentForPaySlipGen" +
                                "eral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.DeuLoanDebtAmoutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CFDebtAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.CFDebtAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CFDebtAmount\' in table \'GetSupplierPaymentForPaySlipGeneral" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.CFDebtAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GoodLeafIncentive {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGeneral.GoodLeafIncentiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoodLeafIncentive\' in table \'GetSupplierPaymentForPaySlipGe" +
                                "neral\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.GoodLeafIncentiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tableGetSupplierPaymentForPaySlipGeneral.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'GetSupplierPaymentForPaySlipGeneral\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BranchName {
                get {
                    try {
                        return ((string)(this[this.tableGetSupplierPaymentForPaySlipGeneral.BranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchName\' in table \'GetSupplierPaymentForPaySlipGeneral\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.BranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountNo {
                get {
                    try {
                        return ((string)(this[this.tableGetSupplierPaymentForPaySlipGeneral.AccountNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountNo\' in table \'GetSupplierPaymentForPaySlipGeneral\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGeneral.AccountNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierCodeNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.SupplierCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierCodeNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.SupplierCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierNameNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.SupplierNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierNameNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.SupplierNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRouteCodeNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.RouteCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRouteCodeNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.RouteCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRouteNameNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.RouteNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRouteNameNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.RouteNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayYearNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.PayYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayYearNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.PayYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayMonthNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.PayMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayMonthNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.PayMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalReceivedGreenLeafNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.TotalReceivedGreenLeafColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalReceivedGreenLeafNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.TotalReceivedGreenLeafColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalGoodGreenLeafNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.TotalGoodGreenLeafColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalGoodGreenLeafNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.TotalGoodGreenLeafColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNormalGreenLeafNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.TotalNormalGreenLeafColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNormalGreenLeafNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.TotalNormalGreenLeafColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodUnitPriceNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.GoodUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodUnitPriceNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.GoodUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNormalUnitPriceNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.NormalUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNormalUnitPriceNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.NormalUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBFBalanceAmountNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.BFBalanceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBFBalanceAmountNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.BFBalanceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherAllowanceNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.OtherAllowanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherAllowanceNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.OtherAllowanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransportAllowanceNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.TransportAllowanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransportAllowanceNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.TransportAllowanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBFDebtsAmountNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.BFDebtsAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBFDebtsAmountNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.BFDebtsAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherDeductionNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.OtherDeductionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherDeductionNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.OtherDeductionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashAdvanceNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.CashAdvanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashAdvanceNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.CashAdvanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFertilizerChemicalNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.FertilizerChemicalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFertilizerChemicalNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.FertilizerChemicalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherDeduction02Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.OtherDeduction02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherDeduction02Null() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.OtherDeduction02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTeaDeductionNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.TeaDeductionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTeaDeductionNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.TeaDeductionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoanInstallmentInterestNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.LoanInstallmentInterestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoanInstallmentInterestNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.LoanInstallmentInterestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransportDeductionNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.TransportDeductionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransportDeductionNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.TransportDeductionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStampNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.StampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStampNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.StampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStationaryOtherNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.StationaryOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStationaryOtherNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.StationaryOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeuFertilizerDebtAmoutNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.DeuFertilizerDebtAmoutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeuFertilizerDebtAmoutNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.DeuFertilizerDebtAmoutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeuLoanDebtAmoutNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.DeuLoanDebtAmoutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeuLoanDebtAmoutNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.DeuLoanDebtAmoutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCFDebtAmountNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.CFDebtAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCFDebtAmountNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.CFDebtAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodLeafIncentiveNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.GoodLeafIncentiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodLeafIncentiveNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.GoodLeafIncentiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankNameNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankNameNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchNameNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.BranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchNameNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.BranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNoNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGeneral.AccountNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNoNull() {
                this[this.tableGetSupplierPaymentForPaySlipGeneral.AccountNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetSupplierPaymentForPaySlipGreenLeafRow : global::System.Data.DataRow {
            
            private GetSupplierPaymentForPaySlipGreenLeafDataTable tableGetSupplierPaymentForPaySlipGreenLeaf;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetSupplierPaymentForPaySlipGreenLeafRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetSupplierPaymentForPaySlipGreenLeaf = ((GetSupplierPaymentForPaySlipGreenLeafDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierCode {
                get {
                    try {
                        return ((string)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.SupplierCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierCode\' in table \'GetSupplierPaymentForPaySlipGreenLe" +
                                "af\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.SupplierCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RouteCode {
                get {
                    try {
                        return ((string)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.RouteCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RouteCode\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.RouteCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day01 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day01\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day02 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day02\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day03 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day03Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day03\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day03Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day04 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day04Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day04\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day04Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day05 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day05Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day05\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day05Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day06 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day06Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day06\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day06Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day07 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day07Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day07\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day07Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day08 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day08Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day08\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day08Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day09 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day09Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day09\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day09Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day10 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day10\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day11 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day11\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day12 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day12\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day13 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day13\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day14 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day14\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day15 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day15\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day16 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day16\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day17 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day17\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day18 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day18\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day19 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day19\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day20 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day20\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day21 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day21Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day21\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day21Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day22 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day22Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day22\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day22Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day23 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day23Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day23\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day23Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day24 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day24Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day24\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day24Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day25 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day25Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day25\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day25Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day26 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day26Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day26\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day26Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day27 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day27Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day27\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day27Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day28 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day28Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day28\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day28Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day29 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day29Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day29\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day29Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day30 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day30\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Day31 {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day31Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day31\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day31Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PayYear {
                get {
                    try {
                        return ((int)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.PayYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayYear\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.PayYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PayMonth {
                get {
                    try {
                        return ((int)(this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.PayMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayMonth\' in table \'GetSupplierPaymentForPaySlipGreenLeaf\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.PayMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierCodeNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.SupplierCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierCodeNull() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.SupplierCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRouteCodeNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.RouteCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRouteCodeNull() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.RouteCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay01Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay01Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day01Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay02Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay02Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay03Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day03Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay03Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day03Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay04Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day04Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay04Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day04Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay05Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day05Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay05Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day05Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay06Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day06Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay06Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day06Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay07Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day07Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay07Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day07Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay08Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day08Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay08Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day08Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay09Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day09Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay09Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day09Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay10Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay10Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay11Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay11Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay12Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay12Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay13Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay13Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay14Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay14Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay15Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay15Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay16Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay16Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay17Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay17Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay18Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay18Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay19Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay19Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay20Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay20Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay21Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day21Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay21Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day21Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay22Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day22Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay22Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day22Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay23Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day23Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay23Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day23Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay24Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day24Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay24Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day24Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay25Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day25Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay25Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day25Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay26Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day26Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay26Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day26Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay27Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day27Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay27Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day27Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay28Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day28Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay28Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day28Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay29Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day29Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay29Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day29Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay30Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay30Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay31Null() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day31Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay31Null() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.Day31Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayYearNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.PayYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayYearNull() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.PayYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayMonthNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipGreenLeaf.PayMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayMonthNull() {
                this[this.tableGetSupplierPaymentForPaySlipGreenLeaf.PayMonthColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetSupplierPaymentForPaySlipThisMonthIssuesRow : global::System.Data.DataRow {
            
            private GetSupplierPaymentForPaySlipThisMonthIssuesDataTable tableGetSupplierPaymentForPaySlipThisMonthIssues;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetSupplierPaymentForPaySlipThisMonthIssuesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetSupplierPaymentForPaySlipThisMonthIssues = ((GetSupplierPaymentForPaySlipThisMonthIssuesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierCode {
                get {
                    try {
                        return ((string)(this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.SupplierCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierCode\' in table \'GetSupplierPaymentForPaySlipThisMon" +
                                "thIssues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.SupplierCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RouteCode {
                get {
                    try {
                        return ((string)(this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.RouteCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RouteCode\' in table \'GetSupplierPaymentForPaySlipThisMonthI" +
                                "ssues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.RouteCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PayYear {
                get {
                    try {
                        return ((int)(this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.PayYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayYear\' in table \'GetSupplierPaymentForPaySlipThisMonthIss" +
                                "ues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.PayYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PayMonth {
                get {
                    try {
                        return ((int)(this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.PayMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayMonth\' in table \'GetSupplierPaymentForPaySlipThisMonthIs" +
                                "sues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.PayMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime IssueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.IssueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueDate\' in table \'GetSupplierPaymentForPaySlipThisMonthI" +
                                "ssues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.IssueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'GetSupplierPaymentForPaySlipThisMonthIs" +
                                "sues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'GetSupplierPaymentForPaySlipThisMonthIs" +
                                "sues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LineItemTotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.LineItemTotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineItemTotalAmount\' in table \'GetSupplierPaymentForPaySlip" +
                                "ThisMonthIssues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.LineItemTotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierCodeNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipThisMonthIssues.SupplierCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierCodeNull() {
                this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.SupplierCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRouteCodeNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipThisMonthIssues.RouteCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRouteCodeNull() {
                this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.RouteCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayYearNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipThisMonthIssues.PayYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayYearNull() {
                this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.PayYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayMonthNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipThisMonthIssues.PayMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayMonthNull() {
                this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.PayMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueDateNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipThisMonthIssues.IssueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueDateNull() {
                this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.IssueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipThisMonthIssues.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipThisMonthIssues.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineItemTotalAmountNull() {
                return this.IsNull(this.tableGetSupplierPaymentForPaySlipThisMonthIssues.LineItemTotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineItemTotalAmountNull() {
                this[this.tableGetSupplierPaymentForPaySlipThisMonthIssues.LineItemTotalAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SupplierPaymentToBankRowChangeEvent : global::System.EventArgs {
            
            private SupplierPaymentToBankRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentToBankRowChangeEvent(SupplierPaymentToBankRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SupplierPaymentToBankRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetSupplierPaymentForPaySlipGeneralRowChangeEvent : global::System.EventArgs {
            
            private GetSupplierPaymentForPaySlipGeneralRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipGeneralRowChangeEvent(GetSupplierPaymentForPaySlipGeneralRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipGeneralRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetSupplierPaymentForPaySlipGreenLeafRowChangeEvent : global::System.EventArgs {
            
            private GetSupplierPaymentForPaySlipGreenLeafRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipGreenLeafRowChangeEvent(GetSupplierPaymentForPaySlipGreenLeafRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipGreenLeafRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetSupplierPaymentForPaySlipThisMonthIssuesRowChangeEvent : global::System.EventArgs {
            
            private GetSupplierPaymentForPaySlipThisMonthIssuesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipThisMonthIssuesRowChangeEvent(GetSupplierPaymentForPaySlipThisMonthIssuesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetSupplierPaymentForPaySlipThisMonthIssuesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591